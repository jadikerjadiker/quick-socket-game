#####index.js

var app = require("express")();
var http = require("http").Server(app);
var io = require('socket.io')(http);

var gameMap = [];


app.get('/', function (req, res) {
    res.sendFile(__dirname+'/mainpage.html');
});

io.on('connection', function(socket) {
   console.log('a user connected');
   
   socket.emit('makePlayer');
   
   socket.on('constantDraw', function(){
      for (var thing of gameMap){
         console.log(thing);
      }
      socket.emit('constantDraw', gameMap);
   });
   
   socket.on('playerMade', function(player){
      //console.log('playerMade');
      //console.log('Heres the player');
      //console.log(player);
      gameMap.push(player);
   });
   
   socket.on('log', function() {
       console.log(arguments);
   });
   
   socket.on('disconnect', function(){
    console.log('user disconnected');
  });
  
});

http.listen(8080, function(){
   console.log('listening on *:8080');
});




#####mainpage.html

<!doctype html>
<html>
    <head>
        
    </head>
    <body>
        <canvas id="mainCanvas" width=90% height=50% style="border:1px solid #000000;">
            Sorry, your browser does not support the HTML5 canvas. Please try to update it so you can play!
        </canvas>
    </body>
    
    <script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.1.js"></script>
    <script>
      var ctx = document.getElementById('mainCanvas').getContext('2d');
      var socket = io();
      var myPlayer;
  
      /* important! for alignment, you should make things
       * relative to the canvas' current width/height.
       */
      
      function Player(x, y) {
          this.x = Math.random()*30;
          this.y = Math.random()*30;
      }
      
      socket.on('makePlayer', function(){
        myPlayer = new Player(0, 0);
        //socket.emit('log', myPlayer.x);
        socket.emit('playerMade', myPlayer);
      });
      
      socket.on('constantDraw', function(aGameMap){
        resizeCanvas();
        for (var item of aGameMap){
          ctx.beginPath();
          ctx.arc(item.x, item.y, 50, 0, 2*Math.PI);
          ctx.stroke();
        }
        socket.emit('log', "constantDraw finished");
        socket.emit('constantDraw');
      });
      
      function resizeCanvas() {
        var canvasWidthPct = .9;
        var canvasHeightPct = .5;
        
        ctx.canvas.width = canvasWidthPct*window.innerWidth;
        ctx.canvas.height = canvasHeightPct*window.innerHeight;
        socket.emit('log', 'resizeCanvas finished')
      }
      
      socket.emit('log', "logged something");
      
      socket.emit('constantDraw');
    </script>
    
</html>